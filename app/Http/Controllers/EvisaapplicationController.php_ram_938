<?php 
namespace App\Http\Controllers;
use Illuminate\Http\Request;
use Illuminate\Contracts\Auth\Guard;
use Illuminate\Support\Facades\Validator;
use Illuminate\Support\Facades\Input;
use Illuminate\Support\Facades\Redirect;
use Illuminate\Session\Store;
use App\Models\Contact;
use App\Models\PricingMaster;
use App\Models\EvisaPurpose;
use App\Models\ProductMaster;
use App\Models\PresaleQuestions;
use App\Models\AirlineDetails;
use App\Models\AirportDetails;
use App\Models\PassportTypes;
use App\Models\OrderDetails;
use App\Models\Users;
use App\Models\ApplicantProfiles;
use App\Models\ApplicantTypes;
use App\Models\DocumentDetails;
use App\Models\UserLeads;
use App\Models\UserserviceDetails;
use App\Models\OccupationDetails;
use App\Models\ApplicationrelationDetails;
use App\Models\ApplicationserviceDetails;
use App\Models\VisatypeDetails;
use App\Models\EvisaAppDetails;
//use Illuminate\Contracts\Routing\ResponseFactory;
use DB;
use Response;
use Session;
use ImageManipulator;
use SolidusMRZ;
use RenderXMLForm;

// include(app_path() . '/ocr/ImageManipulator.php');
$path = getenv('PATH'); 
putenv("PATH=$path:/usr/local/bin");
use thiagoalessio\TesseractOCR\TesseractOCR;
use Deft\MrzParser\MrzParser;

class EvisaapplicationController extends ApplicationController {

	/*
	|--------------------------------------------------------------------------
	| Pages Controller
	|--------------------------------------------------------------------------
	|
	| This controller renders the "marketing page" for the application and
	| is configured to allow everyone to use.
	|
	*/

	/**
	 * Create a new controller instance.
	 *
	 * @return void
	 */
	public function __construct()
	{
		//$this->middleware('guest');
	}

	/**
	 * Show the application home screen to the user.
	 *
	 * @return Response
	 */
	
	public function visaapplication(Request $request){
		$getrequest = $request->all();
		// echo "<pre>";print_r($getrequest);exit;
		if(!empty($getrequest['residing_in'])){
			try{
				$country_name = DB::table('countries')
						->where('country_code',$getrequest['residing_in'])
						->first();	
			} catch(\Illuminate\Database\QueryException $ex){
				dd($ex->getMessage());
			} catch(PDOException $ex){
				dd($ex->getMessage());
			}			
		}
		
		$postData = array(
			'travel_to'=> !empty($getrequest['travel_to'])?$getrequest['travel_to']:NULL,
			'citizen_to'=> !empty($getrequest['citizen_to'])?$getrequest['citizen_to']:NULL,
			'residing_in'=> !empty($getrequest['residing_in'])?$country_name->country_name:NULL,
			'residing_code'=> !empty($getrequest['residing_in'])?$country_name->country_code:NULL
		);
		
		return view('evisaapplication/visaapplication_step_1',compact('postData'));
	}

	public function applyonline(Request $request){
		$getrequest = $request->all();
		$getairport = AirportDetails::where('active', 'Y')
						->orderby('airport_name', 'ASC')
                     	->get();
		$getpassporttype = PassportTypes::where('enabled', 'Y')
						->orderby('display_seq', 'ASC')
                     	->get();                     	
        $airport_arr = $passporttype_arr = array();
        $postData = array(
			'travel_to'=> !empty($getrequest['travel_to'])?$getrequest['travel_to']:NULL,
			'citizen_to'=> !empty($getrequest['citizen_to'])?$getrequest['citizen_to']:NULL,
			'residing_in'=> !empty($getrequest['residing_in'])?$getrequest['residing_in']:NULL,
			'residing_code'=> !empty($getrequest['residing_code'])?$getrequest['residing_code']:NULL
		);
        foreach($getairport as $key=>$val){
        	$airport_arr[] = array(
        			'airport_id'=>$val['airport_id'],
        			'airport_name'=>$val['airport_name']
        	);
        } 
        foreach ($getpassporttype as $key => $value) {
           $passporttype_arr[] = array(
        			'passport_type_id'=>$value['passport_type_id'],
        			'passport_type_code'=>$value['passport_type_code'],
        			'passport_type_name'=>$value['passport_type_name']
        	);
        }            	
        // echo "<pre>";print_r($airport_arr);exit;             	
		return view('evisaapplication/applyonline',compact('airport_arr','passporttype_arr','postData'));
	}

public function evisaservicedocument(Request $request){
	$getrequest = $request->all();
	$serviceid = array();
	
	$getsession = Session::get('applicantdetails');
	
	if(!isset($getrequest['btn_evisa_type'])){
		$getorderdetails = 	DB::table('order_details')
						->join('users','users.user_id','=','order_details.user_id')
						->join('applicant_profiles','applicant_profiles.order_id','=','order_details.order_id')
						->where('users.email_id',$getsession['user_email'])
						->where('order_code',$getsession['order_code'])
						->first();
		$getpostdata = array(
		'residing_in'=> !empty($getorderdetails->residing_in)?$getorderdetails->residing_in:NULL,
		'residing_code'=> !empty($getorderdetails->residing_code)?$getorderdetails->residing_code:NULL,
		'nationality'=> !empty($getorderdetails->nationality)?$getorderdetails->nationality:NULL,
		'order_id'=> !empty($getorderdetails->order_id)?$getorderdetails->order_id:NULL,
		'applicant_id'=> !empty($getorderdetails->profile_id)?$getorderdetails->profile_id:NULL,
		'uid'=> !empty($getorderdetails->user_id)?$getorderdetails->user_id:NULL,
		'passport_type'=> !empty($getorderdetails->passport_type)?$getorderdetails->passport_type:NULL,
		'order_code'=> !empty($getorderdetails->order_code)?$getorderdetails->order_code:NULL
		);			
	}else{
		$getpostdata = array(
		'residing_in'=> !empty($getrequest['residing_in'])?$getrequest['residing_in']:NULL,
		'residing_code'=> !empty($getrequest['residing_code'])?$getrequest['residing_code']:NULL,
		'nationality'=> !empty($getrequest['nationality'])?$getrequest['nationality']:NULL,
		'order_id'=> !empty($getrequest['order_id'])?$getrequest['order_id']:NULL,
		'applicant_id'=> !empty($getrequest['applicant_id'])?$getrequest['applicant_id']:NULL,
		'uid'=> !empty($getrequest['uid'])?$getrequest['uid']:NULL,
		'passport_type'=> !empty($getrequest['passport_type'])?$getrequest['passport_type']:NULL,
		'order_code'=> !empty($getrequest['order_code'])?$getrequest['order_code']:NULL
		);
	}

	if(isset($getrequest['visa_type'])){
		$serviceid = array_flip($getrequest['visa_type']);
	}
	
	UserLeads::where('order_id', $getpostdata['order_id'])
            ->update(['status'=>'Evisa-ExtraDocument']);

    OrderDetails::where('order_id', $getpostdata['order_id'])
            ->update(['applicant_booking_status'=>'Evisa-ExtraDocument']);

    //Page: set_cookie.php
	//$_SERVER['HTTP_HOST'] = 'http://www.example.com ';
	// localhost create problem on IE so this line
	// to get the top level domain
	setcookie ("partial_form", 'Evisa-ExtraDocument', time()+3600*24*(2), '/', "", 0 );
	setcookie ("uid", $getrequest['uid'], time()+3600*24*(2), '/', "", 0 );          

    if(!empty($getrequest['evisa_purpose'])){
		foreach($getrequest['evisa_purpose'] as $key=>$val){
				$saveservicedetails = UserserviceDetails::firstOrCreate(['order_id'=>$getpostdata['order_id'],'service_id'=>$key]);
				$saveservicedetails->service_id = $key;
				$saveservicedetails->purpose_id = $val;
				$saveservicedetails->order_id = !empty($getpostdata['order_id'])?$getpostdata['order_id']:NULL;
				$saveservicedetails->applicant_id = !empty($getpostdata['applicant_id'])?$getpostdata['applicant_id']:NULL;
				$saveservicedetails->user_id = !empty($getpostdata['uid'])?$getpostdata['uid']:NULL;
				$saveservicedetails->status = "Y";

				$saveservicedetails->save();
		}
	}        

	return view('evisaapplication/evisaservicedoc',compact('getpostdata','serviceid'));
}	

public function saveevisaapplication(Request $request){
		$getrequest = $request->all();
		$getsession = Session::get('applicantdetails');
		$postData = array();

		if(!isset($getrequest['btnapply'])){
			// echo "hii";exit;
			$getorderdetails = 	DB::table('order_details')
						->join('users','users.user_id','=','order_details.user_id')
						->join('applicant_profiles','applicant_profiles.order_id','=','order_details.order_id')
						->where('users.email_id',$getsession['user_email'])
						->where('order_code',$getsession['order_code'])
						->first();

			$service_arr = array();
			$purpose_arr = array();
			$get_service_arr = array();
			$getservice = PricingMaster::where('nationality', $getorderdetails->nationality)
								->where('product_id',1)
								->get();
										
		}else{
			$data_user = array(
				'uid'=>'',
				'username'=>$getrequest['user_name'],
				'email'=> $getrequest['email_id'],
				'phone'=> $getrequest['phone_number'],
				'nationality' => $getrequest['citizen_to'],
				'created_at'=> date('Y-m-d H:i:s')
			);
			
			$uid = $this->saveUserDetails($data_user);

			$data_ord = array(
				'order_id'=>'',
				'order_code'=> $this->RandomString(15),
				'user_id'=> $uid,
				'product_id'=> 1,
				'adult'=> 0,
				'child'=> 0,
				'infant'=> 0,
				'nationality'=> !empty($getrequest['citizen_to'])?$getrequest['citizen_to']:NULL,
				'total_price'=> NULL,
				'residing_in'=> !empty($getrequest['residing_in'])?$getrequest['residing_in']:NULL,
				'residing_code'=> !empty($getrequest['residing_code'])?$getrequest['residing_code']:NULL,
				'travel_to'=> !empty($getrequest['travel_to'])?$getrequest['travel_to']:NULL,
				'citizen_to'=> !empty($getrequest['citizen_to'])?$getrequest['citizen_to']:NULL,
				'passport_type'=> !empty($getrequest['passport_code'])?$getrequest['passport_code']:NULL,
				'airport_code'=> !empty($getrequest['airport_code'])?$getrequest['airport_code']:NULL,
				'arrival_date'=> !empty($getrequest['arrival_date'])?$getrequest['arrival_date']:NULL,
				'applicant_booking_status'=> "Evisa-Services",
				'created_at'=> date('Y-m-d H:i:s')
			);

			$ordid = $this->saveOrderDetails($data_ord);

				if(!empty($ordid)){

					$app_data = array(
						'user_id' => $uid,
						'username' => "Applicant-1",
						'mobile_number' => !empty($getrequest['phone_number'])?$getrequest['phone_number']:NULL,
						'nationality' => !empty($getrequest['citizen_to'])?$getrequest['citizen_to']:NULL,
						'country' => !empty($getrequest['citizen_to'])?$getrequest['citizen_to']:NULL,
						'order_id' => $ordid
					);

					$this->saveApplicantProfile($app_data);

					$applicant_id = ApplicantProfiles::select(DB::raw('max(profile_id) as profile_id'))->get()->first();

					if(!empty($applicant_id->profile_id)){
						if(!empty($getrequest['frontpage'])){
							$validator = Validator::make($getrequest,
				                [
				                    'frontpage' => 'image',
				                ],
				                [
				                    'frontpage.image' => 'The file must be an image (jpeg, jpg, png, bmp, gif, or svg)'
				                ]);
				            if ($validator->fails())
				                return array(
				                    'fail' => true,
				                    'errors' => $validator->errors()
				                );


					    	$passport_front = $request->file('frontpage');
					    	$doc_type = "PASSPORT_FRONT";

					    	$input['imagename'] = "passport-front-".time().'.'.$passport_front->getClientOriginalExtension();
						    $imgsize = $passport_front->getClientSize();
						    $imgtype = $passport_front->getClientMimeType();

						    $destinationPath = public_path('doc-upload/');
						    
						    $request->file('frontpage')->move($destinationPath, $input['imagename']);

						    $savedocdetails = DocumentDetails::firstOrCreate(['applicant_id' => $applicant_id->profile_id,'doc_type_id'=>1]);

						    $savedocdetails->user_id = $uid;
						    $savedocdetails->applicant_id = $applicant_id->profile_id;
						    $savedocdetails->doc_type = $doc_type;
						    $savedocdetails->doc_type_id = 1;
						    $savedocdetails->doc_size = $imgsize;
						    $savedocdetails->doc_url = "/doc-upload/".$input['imagename'];
						    $savedocdetails->doc_mime_type = $imgtype;

						    $savedocdetails->save();	
						}

						if(!empty($getrequest['photograph'])){
							$validator = Validator::make($getrequest,
				                [
				                    'photograph' => 'image',
				                ],
				                [
				                    'photograph.image' => 'The file must be an image (jpeg, jpg, png, bmp, gif, or svg)'
				                ]);
				            if ($validator->fails())
				                return array(
				                    'fail' => true,
				                    'errors' => $validator->errors()
				                );


					    	$photograph = $request->file('photograph');
					    	$doc_type = "PHOTO";

					    	$input['imagename'] = "photograph-".time().'.'.$photograph->getClientOriginalExtension();
						    $imgsize = $photograph->getClientSize();
						    $imgtype = $photograph->getClientMimeType();

						    $destinationPath = public_path('doc-upload/');
						    
						    $request->file('photograph')->move($destinationPath, $input['imagename']);

						    $savedocdetails = DocumentDetails::firstOrCreate(['applicant_id' => $applicant_id->profile_id,'doc_type_id'=>3]);

						    $savedocdetails->user_id = $uid;
						    $savedocdetails->applicant_id = $applicant_id->profile_id;
						    $savedocdetails->doc_type = $doc_type;
						    $savedocdetails->doc_type_id = 3;
						    $savedocdetails->doc_size = $imgsize;
						    $savedocdetails->doc_url = "/doc-upload/".$input['imagename'];
						    $savedocdetails->doc_mime_type = $imgtype;

						    $savedocdetails->save();	
						}
					}

					$user_leads_data = array(
						'session_id'=> session()->getId(),
						'name' => !empty($getrequest['user_name'])?$getrequest['user_name']:NULL,
						'phone_number' => !empty($getrequest['phone_number'])?$getrequest['phone_number']:NULL,
						'email_id'=> !empty($getrequest['email_id'])?$getrequest['email_id']:NULL,
						'nationality' => !empty($getrequest['citizen_to'])?$getrequest['citizen_to']:NULL,
						'residing_in' => !empty($getrequest['residing_in'])?$getrequest['residing_in']:NULL,
						'travelling_to' => !empty($getrequest['travel_to'])?$getrequest['travel_to']:NULL,
						'passport_type' => !empty($getrequest['passport_code'])?$getrequest['passport_code']:NULL,
						'airport_code' => !empty($getrequest['airport_code'])?$getrequest['airport_code']:NULL,
						'arrival_date' => !empty($getrequest['arrival_date'])?$getrequest['arrival_date']:NULL,
						'product_id' => 1,
						'order_id' => $ordid,
						'created_at' => date('Y-m-d H:i:s'),
						'status' => "Evisa-Services"	
					);

					$this->saveUserLeads($user_leads_data);
				}

				$service_arr = array();
				$purpose_arr = array();
				$get_service_arr = array();
				$getservice = PricingMaster::where('nationality', $getrequest['citizen_to'])
									->where('product_id',1)
									->get();
		}
		
		foreach($getservice as $key=>$row){
			$service_arr[] = array(
				'p_id'=> $row['p_id'],
				'nationality'=> $row->nationality,
				'product_id'=> $row->product_id,
				'product_type'=> $row->product_type,
				'product_name'=> $row->product_name,
				'service_id'=> $row->service_id,
				'currency'=> $row->currency,
				'adult_cost_price'=> $row->adult_cost_price,
				'service_charge_adult'=> $row->service_charge_adult,
				'total'=> $row->total,
				'is_active'=> $row->is_active
			);
		}

		foreach ($service_arr as $key => $value) {
					# code...
					$getpurpose = EvisaPurpose::where('service_id', $value['service_id'])
							->where('product_id',1)
							->get();
					foreach ($getpurpose as $key => $value1) {
						# code...
						$purpose_arr[$value['product_name']][] = array(
							'purpose_id'=> $value1->purpose_id,
							'purpose_name'=> $value1->purpose_name,
							'product_name'=> $value1->product_name,
							'product_id'=> $value1->product_id,
							'is_active'=> $value1->is_active
						);		
					}

					$get_service_arr[] = array(
						'p_id'=> $value['p_id'],
						'nationality'=> $value['nationality'],
						'product_id'=> $value['product_id'],
						'product_type'=> $value['product_type'],
						'product_name'=> $value['product_name'],
						'service_id'=> $value['service_id'],
						'currency'=> $value['currency'],
						'adult_cost_price'=> $value['adult_cost_price'],
						'service_charge_adult'=> $value['service_charge_adult'],
						'total'=> $value['total'],
						'is_active'=> $value['is_active'],
						'purpose_que'=> $purpose_arr
					);	
					unset($purpose_arr);		
				}
		$getpostdata = array(
			'order_id' => !empty($ordid)?$ordid:$getorderdetails->order_id,
			'applicant_id' => !empty($applicant_id->profile_id)?$applicant_id->profile_id:$getorderdetails->profile_id,
			'uid' => !empty($uid)?$uid:$getorderdetails->user_id,
			'residing_in'=>!empty($getrequest['residing_in'])?$getrequest['residing_in']:$getorderdetails->residing_in,
			'nationality'=>!empty($getrequest['citizen_to'])?$getrequest['citizen_to']:$getorderdetails->nationality,
			'residing_code'=>!empty($getrequest['residing_code'])?$getrequest['residing_code']:$getorderdetails->residing_code,
			'passport_type'=> !empty($getrequest['passport_code'])?$getrequest['passport_code']:$getorderdetails->passport_type,
			'order_code'=>$data_ord['order_code']
		);
	return view('evisaapplication/evisatype',compact('getpostdata','get_service_arr'));

}

public function saveUserDetails($getpostdata){
	$uid = Users::firstOrCreate(['email_id' => $getpostdata['email']]);
    $uid->email_id  = $getpostdata['email']; 
    $uid->mobile_no = $getpostdata['phone']; 
    $uid->username  = $getpostdata['username']; 
    $uid->nationality = $getpostdata['nationality']; 
    $uid->created_at = $getpostdata['created_at'];

    $uid->save();

    return $uid->user_id;	
}
	
public function saveOrderDetails($getpostdata){
	$ord_details = OrderDetails::firstOrCreate(['order_code'=>$getpostdata['order_code']]);
	$ord_details->order_code = 	$getpostdata['order_code'];
	$ord_details->user_id = 	$getpostdata['user_id'];
	$ord_details->product_id = 	$getpostdata['product_id'];
	$ord_details->adult = 		$getpostdata['adult'];
	$ord_details->child = 		$getpostdata['child'];
	$ord_details->infant = 		$getpostdata['infant'];
	$ord_details->nationality = $getpostdata['nationality'];
	$ord_details->total_price = $getpostdata['total_price'];
	$ord_details->residing_in = $getpostdata['residing_in'];
	$ord_details->residing_code = $getpostdata['residing_code'];
	$ord_details->travel_to = $getpostdata['travel_to'];
	$ord_details->citizen_to = $getpostdata['citizen_to'];
	$ord_details->passport_type = $getpostdata['passport_type'];
	$ord_details->airport_code = $getpostdata['airport_code'];
	$ord_details->arrival_date = $getpostdata['arrival_date'];
	$ord_details->created_at = 	$getpostdata['created_at'];
	$ord_details->applicant_booking_status = $getpostdata['applicant_booking_status'];

	$ord_details->save();

	$ordid = $ord_details->order_id;

	return $ordid;
}
public function saveApplicantProfile($getpostdata){
	$saveapplicant = new ApplicantProfiles;

	$saveapplicant->user_id = $getpostdata['user_id'];
	$saveapplicant->username = $getpostdata['username'];
	$saveapplicant->mobile_number = !empty($getpostdata['mobile_number'])?$getpostdata['mobile_number']:NULL;
	$saveapplicant->nationality = !empty($getpostdata['nationality'])?$getpostdata['nationality']:NULL;
	$saveapplicant->country = !empty($getpostdata['country'])?$getpostdata['country']:NULL;
	$saveapplicant->order_id = $getpostdata['order_id'];
	$saveapplicant->is_submitted = "Y";

	$saveapplicant->save();
}
public function saveUserLeads($getpostdata){
	$saveuserlead = new UserLeads;

	$saveuserlead->name = !empty($getpostdata['name'])?$getpostdata['name']:NULL;
	$saveuserlead->phone_number = !empty($getpostdata['phone_number'])?$getpostdata['phone_number']:NULL;
	$saveuserlead->email_id = !empty($getpostdata['email_id'])?$getpostdata['email_id']:NULL;
	$saveuserlead->nationality = !empty($getpostdata['nationality'])?$getpostdata['nationality']:NULL;
	$saveuserlead->residing_in = !empty($getpostdata['residing_in'])?$getpostdata['residing_in']:NULL;
	$saveuserlead->travelling_to = !empty($getpostdata['travelling_to'])?$getpostdata['travelling_to']:NULL;
	$saveuserlead->passport_type = !empty($getpostdata['passport_type'])?$getpostdata['passport_type']:NULL;
	$saveuserlead->airport_code = !empty($getpostdata['airport_code'])?$getpostdata['airport_code']:NULL;
	$saveuserlead->arrival_date = !empty($getpostdata['arrival_date'])?$getpostdata['arrival_date']:NULL;
	$saveuserlead->product_id = $getpostdata['product_id'];
	$saveuserlead->order_id = $getpostdata['order_id'];
	$saveuserlead->session_id = $getpostdata['session_id'];
	$saveuserlead->created_at = $getpostdata['created_at'];
	$saveuserlead->status = $getpostdata['status'];

	$saveuserlead->save();
}

public function evisaapplicationform(Request $request){
	$getrequest = $request->all();
	$r=array("error"=>false,"message"=>"");
	$getsession = Session::get('applicantdetails');
	
	if(!isset($getrequest['btn_evisa_type']) && !isset($getrequest['btn_evisa_doc'])){
		$getorderdetails = 	DB::table('order_details')
						->join('users','users.user_id','=','order_details.user_id')
						->join('applicant_profiles','applicant_profiles.order_id','=','order_details.order_id')
						->where('users.email_id',$getsession['user_email'])
						->where('order_code',$getsession['order_code'])
						->first();
		$getpostdata = array(
		'residing_in'=> !empty($getorderdetails->residing_in)?$getorderdetails->residing_in:NULL,
		'residing_code'=> !empty($getorderdetails->residing_code)?$getorderdetails->residing_code:NULL,
		'nationality'=> !empty($getorderdetails->nationality)?$getorderdetails->nationality:NULL,
		'order_id'=> !empty($getorderdetails->order_id)?$getorderdetails->order_id:NULL,
		'applicant_id'=> !empty($getorderdetails->profile_id)?$getorderdetails->profile_id:NULL,
		'uid'=> !empty($getorderdetails->user_id)?$getorderdetails->user_id:NULL,
		'passport_type'=> !empty($getorderdetails->passport_type)?$getorderdetails->passport_type:NULL,
		'order_code'=> !empty($getorderdetails->order_code)?$getorderdetails->order_code:NULL
		);			
	}else{
		$getpostdata = array(
		'residing_in'=> !empty($getrequest['residing_in'])?$getrequest['residing_in']:NULL,
		'residing_code'=> !empty($getrequest['residing_code'])?$getrequest['residing_code']:NULL,
		'nationality'=> !empty($getrequest['nationality'])?$getrequest['nationality']:NULL,
		'order_id'=> !empty($getrequest['order_id'])?$getrequest['order_id']:NULL,
		'applicant_id'=> !empty($getrequest['applicant_id'])?$getrequest['applicant_id']:NULL,
		'uid'=> !empty($getrequest['uid'])?$getrequest['uid']:NULL,
		'passport_type'=> !empty($getrequest['passport_type'])?$getrequest['passport_type']:NULL,
		'order_code'=> !empty($getrequest['order_code'])?$getrequest['order_code']:NULL
		);
	}
	
	UserLeads::where('order_id', $getpostdata['order_id'])
            ->update(['status'=>'Evisa-ApplicationDetails']);

    OrderDetails::where('order_id', $getpostdata['order_id'])
            ->update(['applicant_booking_status'=>'Evisa-ApplicationDetails']);

    //Page: set_cookie.php
	//$_SERVER['HTTP_HOST'] = 'http://www.example.com ';
	// localhost create problem on IE so this line
	// to get the top level domain
	setcookie ("partial_form", 'Evisa-ApplicationDetails', time()+3600*24*(2), '/', "", 0 );
	setcookie ("uid", $getrequest['uid'], time()+3600*24*(2), '/', "", 0 );                

	// $applicant_id = ApplicantProfiles::select(DB::raw('max(profile_id) as profile_id'))->get()->first();
	$getorderdetails = 	DB::table('order_details')
						->join('product_master','product_master.product_id','=','order_details.product_id')
						->where('user_id',$getpostdata['uid'])
						->where('order_id',$getpostdata['order_id'])
						->first();

	$getapplicatdata = ApplicantProfiles::query()
						->join('document_details as dd','dd.applicant_id','=','applicant_profiles.profile_id')
						->where('applicant_profiles.user_id',$getpostdata['uid'])
						->where('applicant_profiles.profile_id',$getpostdata['applicant_id'])
						->get([
													'applicant_profiles.*',
													'dd.doc_id',
													'dd.doc_type',
													'dd.doc_url'
												])->first();					

	//echo "<pre>";print_r($getapplicatdata);exit;

	// $this->ex($r);

	if(!empty($getpostdata['applicant_id'])){
		if(isset($getrequest['business_card']) && !empty($getrequest['business_card'])){							
			$passport_front = $request->file('business_card');
			$doc_type = "BUSINESS_CARD";

			$input['imagename'] = "business-card-".time().'.'.$passport_front->getClientOriginalExtension();
			$imgsize = $passport_front->getClientSize();
			$imgtype = $passport_front->getClientMimeType();

			$destinationPath = public_path('doc-upload/');
							    
			$request->file('business_card')->move($destinationPath, $input['imagename']);

			$savedocdetails = DocumentDetails::firstOrCreate(['applicant_id' => $getpostdata['applicant_id'],'doc_type_id'=>18]);

			$savedocdetails->user_id = $getpostdata['uid'];
			$savedocdetails->applicant_id = $getpostdata['applicant_id'];
			$savedocdetails->doc_type = $doc_type;
			$savedocdetails->doc_type_id = 18;
			$savedocdetails->doc_size = $imgsize;
			$savedocdetails->doc_url = "/doc-upload/".$input['imagename'];
			$savedocdetails->doc_mime_type = $imgtype;

			$savedocdetails->save();
		}

		if(isset($getrequest['hospital_letter']) && !empty($getrequest['hospital_letter'])){
			$passport_front = $request->file('hospital_letter');
			$doc_type = "HOSPITAL_LETTER";

			$input['imagename'] = "hospital-letter-".time().'.'.$passport_front->getClientOriginalExtension();
			$imgsize = $passport_front->getClientSize();
			$imgtype = $passport_front->getClientMimeType();

			$destinationPath = public_path('doc-upload/');
							    
			$request->file('hospital_letter')->move($destinationPath, $input['imagename']);

			$savedocdetails = DocumentDetails::firstOrCreate(['applicant_id' => $getpostdata['applicant_id'],'doc_type_id'=>19]);

			$savedocdetails->user_id = $getpostdata['uid'];
			$savedocdetails->applicant_id = $getpostdata['applicant_id'];
			$savedocdetails->doc_type = $doc_type;
			$savedocdetails->doc_type_id = 19;
			$savedocdetails->doc_size = $imgsize;
			$savedocdetails->doc_url = "/doc-upload/".$input['imagename'];
			$savedocdetails->doc_mime_type = $imgtype;

			$savedocdetails->save();
		}
	}				

	if(!empty($getapplicatdata['doc_url'])){
		$passport_type      = $getapplicatdata["doc_type"];
		$passport_image_url = $getapplicatdata["doc_url"];
		$getocr = array();

		if(empty($passport_type) || empty($passport_image_url))
		{ 
			$this->e($r,"Cannot proceed, Passport front image is not present");
		}


		if($r["error"]){
			$this->ex($r);	
		}

		$target_dir = "/ocr-upload/";
	    $uploadOk = 1;
	    $FileType = strtolower(pathinfo($getapplicatdata['doc_url'],PATHINFO_EXTENSION));
	    $target_file = public_path().$target_dir . $this->generateRandomString() .'-'.$getpostdata['applicant_id'].'.'.$FileType;
	    $img_path     = public_path().$getapplicatdata['doc_url'];
	    
	    // GET ORIGINAL IMAGE DIMENSIONS
	        list($original_w, $original_h) = getimagesize($img_path);
	        // echo $original_w.'/'.$original_h;exit;
	        if ($original_w > $original_h){
	            //it's a landscape
	            $manipulator = new ImageManipulator($img_path);
	            $flag = $manipulator->save($target_file);
	            if($flag == 1){
	                $getocr = $this->uploadToApi($target_file, $FileType);
	            } else {
	                header('HTTP/1.0 403 Forbidden');
	                echo "Sorry, there was an error uploading your file.";
	            }
	        } else if ($original_w < $original_h){
	            //it's a portrait
	            if($original_h > 414){
	            $manipulator = new ImageManipulator($img_path);
	            $width  = $manipulator->getWidth();
	            $height = $manipulator->getHeight();
	            $centreX = 0;
	            $centreY = round($height / 2);

	            // our dimensions will be 200x130
	            $x1 = $centreX; // 200 / 2
	            $y1 = $centreY - 200; // 130 / 2
	     
	            $x2 = $centreX; // 200 / 2
	            $y2 = $centreY + 200; // 130 / 2

	            // echo $x2.'/'.$y2;exit;
	            // center cropping to 200x130
	            $newImage = $manipulator->crop(0, (round(($height)/2)) , $width, $height);
	            // saving file to uploads folder
	            $flag = $manipulator->save($target_file);
	            if($flag == 1){
	                $getocr = $this->uploadToApi($target_file, $FileType);
	            } else {
	                header('HTTP/1.0 403 Forbidden');
	                echo "Sorry, there was an error uploading your file.";
	            }
	            }else{
	            	$manipulator = new ImageManipulator($img_path);
	            	$flag = $manipulator->save($target_file);
		            if($flag == 1){
		                $getocr = $this->uploadToApi($target_file, $FileType);
		            } else {
		                header('HTTP/1.0 403 Forbidden');
		                echo "Sorry, there was an error uploading your file.";
		            }
	            }
	        } else {
	            //image width and height are equal, therefore it is square.
	            $manipulator = new ImageManipulator($img_path);
	            	$flag = $manipulator->save($target_file);
		            if($flag == 1){
		                $getocr = $this->uploadToApi($target_file, $FileType);
		        } else {
		                header('HTTP/1.0 403 Forbidden');
		                echo "Sorry, there was an error uploading your file.";
		        }
	        }
	}

	$getpassporttype = DB::table('passport_types')->get();
	$getcountry = DB::table('countries')->where('enabled',"Y")->orderby('country_name', 'ASC')->get();
	$getqualification = DB::table('tbl_qualification')->orderby('qualification', 'ASC')->get();
	// $getpropfession = DB::table('professions')->get();
	$getmarital = DB::table('marital_status')->get();
	// $getlang = DB::table('languages')->get();
	$getreligion = DB::table('religions')->orderby('religion_name')->get();	

	if(!empty($getrequest['evisa_purpose'])){
		foreach($getrequest['evisa_purpose'] as $key=>$val){
				$saveservicedetails = UserserviceDetails::firstOrCreate(['order_id'=>$getpostdata['order_id'],'service_id'=>$key]);
				$saveservicedetails->service_id = $key;
				$saveservicedetails->purpose_id = $val;
				$saveservicedetails->order_id = !empty($getpostdata['order_id'])?$getpostdata['order_id']:NULL;
				$saveservicedetails->applicant_id = !empty($getpostdata['applicant_id'])?$getpostdata['applicant_id']:NULL;
				$saveservicedetails->user_id = !empty($getpostdata['uid'])?$getpostdata['uid']:NULL;
				$saveservicedetails->status = "Y";

				$saveservicedetails->save();
		}
	}

	// echo "<pre>";print_r($getocr);exit;
	return view('evisaapplication/evisaform',compact('getpostdata','getapplicatdata','getocr','getpassporttype','getcountry','getpropfession','getmarital','getlang','getreligion','getqualification'));
}

public function evisaapplicationfamily(Request $request){
	$getrequest = $request->all();
	$getsession = Session::get('applicantdetails');
	// echo "<pre>";print_r($getrequest);exit;

	if(!isset($getrequest['btn_basic_form'])){
		$getorderdetails = 	DB::table('order_details')
						->join('users','users.user_id','=','order_details.user_id')
						->join('applicant_profiles','applicant_profiles.order_id','=','order_details.order_id')
						->where('users.email_id',$getsession['user_email'])
						->where('order_code',$getsession['order_code'])
						->first();
		$getpostdata = array(
		'residing_in'=> !empty($getorderdetails->residing_in)?$getorderdetails->residing_in:NULL,
		'residing_code'=> !empty($getorderdetails->residing_code)?$getorderdetails->residing_code:NULL,
		'nationality'=> !empty($getorderdetails->nationality)?$getorderdetails->nationality:NULL,
		'order_id'=> !empty($getorderdetails->order_id)?$getorderdetails->order_id:NULL,
		'applicant_id'=> !empty($getorderdetails->profile_id)?$getorderdetails->profile_id:NULL,
		'uid'=> !empty($getorderdetails->user_id)?$getorderdetails->user_id:NULL,
		'passport_type'=> !empty($getorderdetails->passport_type)?$getorderdetails->passport_type:NULL,
		'order_code'=> !empty($getorderdetails->order_code)?$getorderdetails->order_code:NULL
		);			
	}else{
		
		$getpostdata = array(
		'residing_in'=> !empty($getrequest['residing_in'])?$getrequest['residing_in']:NULL,
		'residing_code'=> !empty($getrequest['residing_code'])?$getrequest['residing_code']:NULL,
		'nationality'=> !empty($getrequest['nationality'])?$getrequest['nationality']:NULL,
		'order_id'=> !empty($getrequest['order_id'])?$getrequest['order_id']:NULL,
		'applicant_id'=> !empty($getrequest['applicant_id'])?$getrequest['applicant_id']:NULL,
		'uid'=> !empty($getrequest['uid'])?$getrequest['uid']:NULL,
		'passport_type'=> !empty($getrequest['passport_type'])?$getrequest['passport_type']:NULL,
		'order_code'=> !empty($getrequest['order_code'])?$getrequest['order_code']:NULL
		);

		$pass_data = array(
			'user_id'=>$getrequest['uid'],
			'applicant_id'=>$getrequest['applicant_id'],
			'pp_no'=>$getrequest['Passport_number'],
			'pp_type'=>$getrequest['passport_type'],
			'pp_expiry_date'=>$getrequest['doe'],
			'pp_issuing_date'=>$getrequest['doi'],
			'pp_issuing_govt'=>$getrequest['issue_gov'],
			'oth_ppt'=>!empty($getrequest['oth_ppt'])?$getrequest['oth_ppt']:NULL,
			'prev_passport_country_issue'=>!empty($getrequest['prev_passport_country_issue'])?$getrequest['prev_passport_country_issue']:NULL,
			'other_ppt_no'=>!empty($getrequest['other_ppt_no'])?$getrequest['other_ppt_no']:NULL,
			'other_ppt_issue_place'=>!empty($getrequest['other_ppt_issue_place'])?$getrequest['other_ppt_issue_place']:NULL,
			'other_ppt_issue_date'=>!empty($getrequest['other_ppt_issue_date'])?$getrequest['other_ppt_issue_date']:NULL,
			'other_ppt_nationality'=>!empty($getrequest['other_ppt_nationality'])?$getrequest['other_ppt_nationality']:NULL,
			'pp_place_of_issue'=>!empty($getrequest['issue_place'])?$getrequest['issue_place']:NULL
		);
		// echo "<pre>";print_r($pass_data);exit;
		$ppid = DB::table('passport_details')
    		->insertGetId(
            	['user_id'=>$pass_data['user_id'],'applicant_id'=>$pass_data['applicant_id'],'pp_no' => $pass_data['pp_no'], 'pp_type'=>$pass_data['pp_type'], 'pp_issue_date'=> $pass_data['pp_issuing_date'], 'pp_expiry_date'=> $pass_data['pp_expiry_date'], 'pp_issuing_govt'=> $pass_data['pp_issuing_govt'],'pp_place_of_issue'=>$pass_data['pp_place_of_issue'],'oth_ppt'=>$pass_data['oth_ppt'],'prev_passport_country_issue'=>$pass_data['prev_passport_country_issue'],'other_ppt_no'=>$pass_data['other_ppt_no'],'other_ppt_issue_place'=>$pass_data['other_ppt_issue_place'],'other_ppt_issue_date'=>$pass_data['other_ppt_issue_date'],'other_ppt_nationality'=>$pass_data['other_ppt_nationality']]
    	);

    	if($ppid){
    		ApplicantProfiles::where('profile_id', $getrequest['applicant_id'])
            ->where('user_id', $getrequest['uid'])
            ->update(['username'=>$getrequest['given_name'],'surname'=>$getrequest['surname'],'previous_surname'=>$getrequest['previous_surname'],'previous_name'=>$getrequest['previous_name'],'passport_detail_id'=>$ppid,'gender' => $getrequest['gender'], 'dob'=>$getrequest['dob'], 'place_of_birth'=> $getrequest['city_birth'], 'religion'=>$getrequest['religion_code'],'visible_marks'=>$getrequest['visible_marks'],'qualification'=>$getrequest['qualification'],'aquired_nation'=>$getrequest['aquired_nation'],'prev_nationality'=>$getrequest['prev_nationality'],'refer_flag'=>!empty($getrequest['refer_flag'])?$getrequest['refer_flag']:NULL,'country_of_birth'=>$getrequest['cob'],'citizenship_no'=>$getrequest['nation_id'],'visible_marks'=>$getrequest['visible_marks'],'qualification'=>$getrequest['qualification'],'aquired_nation'=>$getrequest['aquired_nation'],'prev_nationality'=>$getrequest['prev_nationality']]);
    	}
	}

	UserLeads::where('order_id', $getpostdata['order_id'])
            ->update(['status'=>'Evisa-RelationDetails']);

    OrderDetails::where('order_id', $getpostdata['order_id'])
            ->update(['applicant_booking_status'=>'Evisa-RelationDetails']);

    setcookie ("partial_form", 'Evisa-RelationDetails', time()+3600*24*(2), '/', "", 0 );  
    setcookie ("uid", $getrequest['uid'], time()+3600*24*(2), '/', "", 0 );        

	$getapplicatdata = ApplicantProfiles::query()
						->join('users','users.user_id','=','applicant_profiles.user_id')
						->where('applicant_profiles.user_id',$getpostdata['uid'])
						->where('applicant_profiles.profile_id',$getpostdata['applicant_id'])
						->get([
													'applicant_profiles.*',
													'email_id'
												])->first();
	// echo "<pre>";print_r($getapplicatdata);exit;
	$getcountry = DB::table('countries')->orderby('country_name', 'ASC')->get();
	$getpropfession = DB::table('tbl_occupation')->orderby('occupation_name','ASC')->get();
	$getmarital = DB::table('marital_status')->where('enabled','Y')->get();
	$getlang = DB::table('languages')->get();

	
    return view('evisaapplication/evisaform-familydetails',compact('getpostdata', 'getapplicatdata', 'getcountry','getpropfession','getmarital','getlang'));	

}

public function evisaapplicationdetails(Request $request){
	$getrequest = $request->all();
	$getsession = Session::get('applicantdetails');
	
	if(!isset($getrequest['btn_family_details'])){
		$getorderdetails = 	DB::table('order_details')
						->join('users','users.user_id','=','order_details.user_id')
						->join('applicant_profiles','applicant_profiles.order_id','=','order_details.order_id')
						->where('users.email_id',$getsession['user_email'])
						->where('order_code',$getsession['order_code'])
						->first();
		$getpostdata = array(
		'residing_in'=> !empty($getorderdetails->residing_in)?$getorderdetails->residing_in:NULL,
		'residing_code'=> !empty($getorderdetails->residing_code)?$getorderdetails->residing_code:NULL,
		'nationality'=> !empty($getorderdetails->nationality)?$getorderdetails->nationality:NULL,
		'order_id'=> !empty($getorderdetails->order_id)?$getorderdetails->order_id:NULL,
		'applicant_id'=> !empty($getorderdetails->profile_id)?$getorderdetails->profile_id:NULL,
		'uid'=> !empty($getorderdetails->user_id)?$getorderdetails->user_id:NULL,
		'passport_type'=> !empty($getorderdetails->passport_type)?$getorderdetails->passport_type:NULL,
		'order_code'=> !empty($getorderdetails->order_code)?$getorderdetails->order_code:NULL
		);
	}else{
		$getpostdata = array(
		'residing_in'=> !empty($getrequest['residing_in'])?$getrequest['residing_in']:NULL,
		'residing_code'=> !empty($getrequest['residing_code'])?$getrequest['residing_code']:NULL,
		'nationality'=> !empty($getrequest['nationality'])?$getrequest['nationality']:NULL,
		'order_id'=> !empty($getrequest['order_id'])?$getrequest['order_id']:NULL,
		'applicant_id'=> !empty($getrequest['applicant_id'])?$getrequest['applicant_id']:NULL,
		'uid'=> !empty($getrequest['uid'])?$getrequest['uid']:NULL,
		'passport_type'=> !empty($getrequest['passport_type'])?$getrequest['passport_type']:NULL,
		'order_code'=> !empty($getrequest['order_code'])?$getrequest['order_code']:NULL
		);
	$saverelationdetails = ApplicationrelationDetails::firstOrCreate(['applicant_id'=>$getrequest['applicant_id']]);
	$saverelationdetails->applicant_id = $getrequest['applicant_id'];
	$saverelationdetails->pres_add1 = !empty($getrequest['pres_add1'])?$getrequest['pres_add1']:NULL;
	$saverelationdetails->pres_add2 = !empty($getrequest['pres_add2'])?$getrequest['pres_add2']:NULL;
	$saverelationdetails->pres_country = !empty($getrequest['pres_country'])?$getrequest['pres_country']:NULL;
	$saverelationdetails->state_name = !empty($getrequest['state_name'])?$getrequest['state_name']:NULL;
	$saverelationdetails->pincode = !empty($getrequest['pincode'])?$getrequest['pincode']:NULL;
	$saverelationdetails->pres_phone = !empty($getrequest['pres_phone'])?$getrequest['pres_phone']:NULL;
	$saverelationdetails->perm_address1 = !empty($getrequest['perm_address1'])?$getrequest['perm_address1']:NULL;
	$saverelationdetails->perm_address2 = !empty($getrequest['perm_address2'])?$getrequest['perm_address2']:NULL;
	$saverelationdetails->perm_address3 = !empty($getrequest['perm_address3'])?$getrequest['perm_address3']:NULL;
	$saverelationdetails->father_name = !empty($getrequest['fthrname'])?$getrequest['fthrname']:NULL;
	$saverelationdetails->father_nationality = !empty($getrequest['father_nationality'])?$getrequest['father_nationality']:NULL;
	$saverelationdetails->father_previous_nationality = !empty($getrequest['father_previous_nationality'])?$getrequest['father_previous_nationality']:NULL;
	$saverelationdetails->father_place_of_birth = !empty($getrequest['father_place_of_birth'])?$getrequest['father_place_of_birth']:NULL;
	$saverelationdetails->father_country_of_birth = !empty($getrequest['father_country_of_birth'])?$getrequest['father_country_of_birth']:NULL;
	$saverelationdetails->mother_name = !empty($getrequest['mother_name'])?$getrequest['mother_name']:NULL;
	$saverelationdetails->mother_nationality = !empty($getrequest['mother_nationality'])?$getrequest['mother_nationality']:NULL;
	$saverelationdetails->mother_previous_nationality = !empty($getrequest['mother_previous_nationality'])?$getrequest['mother_previous_nationality']:NULL;
	$saverelationdetails->mother_place_of_birth = !empty($getrequest['mother_place_of_birth'])?$getrequest['mother_place_of_birth']:NULL;
	$saverelationdetails->mother_country_of_birth = !empty($getrequest['mother_country_of_birth'])?$getrequest['mother_country_of_birth']:NULL;
	$saverelationdetails->spouse_name = !empty($getrequest['spouse_name'])?$getrequest['spouse_name']:NULL;
	$saverelationdetails->spouse_nationality = !empty($getrequest['spouse_nationality'])?$getrequest['spouse_nationality']:NULL;
	$saverelationdetails->spouse_previous_nationality =!empty($getrequest['spouse_previous_nationality'])?$getrequest['spouse_previous_nationality']:NULL;
	$saverelationdetails->spouse_place_of_birth = !empty($getrequest['spouse_place_of_birth'])?$getrequest['spouse_place_of_birth']:NULL;
	$saverelationdetails->spouse_country_of_birth = !empty($getrequest['spouse_country_of_birth'])?$getrequest['spouse_country_of_birth']:NULL;
	$saverelationdetails->grandparent_flag1 = !empty($getrequest['grandparent_flag1'])?$getrequest['grandparent_flag1']:NULL;
	$saverelationdetails->grandparent_details = !empty($getrequest['grandparent_details'])?$getrequest['grandparent_details']:NULL;
	$saverelationdetails->pre_occupation = !empty($getrequest['pre_occupation'])?$getrequest['pre_occupation']:NULL;
	$saverelationdetails->occ_flag = !empty($getrequest['occ_flag'])?$getrequest['occ_flag']:NULL;
	$saverelationdetails->empname = !empty($getrequest['empname'])?$getrequest['empname']:NULL;
	$saverelationdetails->empdesignation = !empty($getrequest['empdesignation'])?$getrequest['empdesignation']:NULL;
	$saverelationdetails->empaddress = !empty($getrequest['empaddress'])?$getrequest['empaddress']:NULL;
	$saverelationdetails->empphone = !empty($getrequest['empphone'])?$getrequest['empphone']:NULL;
	$saverelationdetails->previous_occupation = !empty($getrequest['previous_occupation'])?$getrequest['previous_occupation']:NULL;
	$saverelationdetails->prev_org = !empty($getrequest['prev_org'])?$getrequest['prev_org']:NULL;
	$saverelationdetails->previous_organization = !empty($getrequest['previous_organization'])?$getrequest['previous_organization']:NULL;
	$saverelationdetails->previous_designation = !empty($getrequest['previous_designation'])?$getrequest['previous_designation']:NULL;
	$saverelationdetails->previous_rank = !empty($getrequest['previous_rank'])?$getrequest['previous_rank']:NULL;
	$saverelationdetails->previous_posting = !empty($getrequest['previous_posting'])?$getrequest['previous_posting']:NULL;

	$saverelationdetails->save();

	ApplicantProfiles::where('profile_id', $getrequest['applicant_id'])
            ->where('user_id', $getrequest['uid'])
            ->update(['marital_status_id'=>$getrequest['marital_status']]);
	}
	
	UserLeads::where('order_id', $getpostdata['order_id'])
            ->update(['status'=>'Evisa-FinalForm']);

    OrderDetails::where('order_id', $getpostdata['order_id'])
            ->update(['applicant_booking_status'=>'Evisa-FinalForm']);

    setcookie ("partial_form", 'Evisa-FinalForm', time()+3600*24*(2), '/', "", 0 );
	setcookie ("uid", $getrequest['uid'], time()+3600*24*(2), '/', "", 0 );        

	$getservices = ApplicationserviceDetails::join('applicant_profiles','applicant_profiles.profile_id','=','tbl_user_service_details.applicant_id')
    ->join('order_details','order_details.order_id','=','applicant_profiles.order_id')
    ->join('pricing_master',function($join){
    	$join->on('pricing_master.service_id','=','tbl_user_service_details.service_id')
    		->on('pricing_master.nationality','=','order_details.nationality');	
    })
    ->join('india_evisa_purpose','india_evisa_purpose.purpose_id','=','tbl_user_service_details.purpose_id')
    ->where('tbl_user_service_details.applicant_id', $getpostdata['applicant_id'])->where('tbl_user_service_details.user_id',$getpostdata['uid'])
         ->get(); 

    $getvisadetails = UserLeads::join('order_details','order_details.order_id','=','user_leads.order_id')
    ->join('product_master','product_master.product_id','=','order_details.product_id')
    ->join('airport_details','airport_details.airport_id','=','user_leads.airport_code')
    ->where('order_details.order_id', $getpostdata['order_id'])
    ->where('order_details.user_id',$getpostdata['uid'])
    ->get()->first();

    $service_arr = array();
    $no_entries = 0;     
    foreach ($getservices as $key => $row) {
       	$service_arr[] = array(
       		'service_id'=>$row->service_id,
       		'purpose_id'=>$row->purpose_id,
       		'order_id'=>$row->order_id,
       		'applicant_id'=>$row->applicant_id,
       		'user_id'=>$row->user_id,
       		'product_name'=>$row->product_name,
       		'product_type'=>$row->product_type,
       		'purpose_name'=>$row->purpose_name,
       	);

       	if($row->service_id == 1 && $row->service_id == 2){
       		$no_entries = 2;
       	}elseif($row->service_id == 1 && $row->service_id == 2 && $row->service_id == 3){
       		$no_entries = 3;
       	}elseif($row->service_id == 3){
       		$no_entries = 3;
       	}else{
       		$no_entries = 2;
       	}
    }

    $getnationname = DB::table('countries')->where('country_id',$getpostdata['nationality'])->first();

    $visa_data = array(
    	'visa_duration'=>60,
    	'no_entries'=>$no_entries,
    	'airport_name'=>$getvisadetails['airport_name'],
       	'airport_id'=>$getvisadetails['airport_id'],
       	'visa_type'=>$getvisadetails['product_name'],
       	'visa_services'=>implode(", ", array_column($service_arr, 'product_name')),
       	'ref_name_in_nation'=> !empty($getnationname->country_name)?$getnationname->country_name:NULL
    );

    $getairport = AirportDetails::where('active', 'Y')
						->orderby('airport_name', 'ASC')
                     	->get();
    $getvisatypes = VisatypeDetails::where('active', 'Y')
    					->orderby('type_name', 'ASC')
    					->get();

   	$getsaarccountry = DB::table('countries')->where('is_saarc','Y')->orderby('country_name', 'ASC')->get();

   	$current_year = date('Y');
	$min_year = $current_year - 3;
	for($i = $min_year; $i <= $current_year; $i++){
	    $year_array[$i] = $i;
	}
    $getsaarcyear = array_reverse($year_array,true);
    
    return view('evisaapplication/evisaformdetails',compact('getpostdata', 'service_arr', 'visa_data','getairport', 'getvisatypes', 'getsaarccountry', 'getsaarcyear'));           
}

public function verifymail(Request $request){
	$getrequest = $request->all();
	// echo "<pre>";print_r($getrequest);exit;
	$service_arr = array();
	$sarrc_arr = array();

	if(isset($getrequest['service_req_meeting_frend']) && !empty($getrequest['service_req_meeting_frend']['frnd_name'])){
		// $json_encode .= json_encode(array('service_req_meeting_frend'=>$getrequest['service_req_meeting_frend']));
		$service_arr['service_req_meeting_frend'] = array(
				'frnd_name'=>$getrequest['service_req_meeting_frend']['frnd_name'],
				'frnd_address'=>$getrequest['service_req_meeting_frend']['frnd_address'],
				'frnd_state'=>$getrequest['service_req_meeting_frend']['frnd_state'],
				'frnd_district'=>$getrequest['service_req_meeting_frend']['frnd_district'],
				'frnd_phone'=>$getrequest['service_req_meeting_frend']['frnd_phone']
			);
	}

	if(isset($getrequest['service_req_con_tours']) && !empty($getrequest['service_req_con_tours']['travel_name_address'])){
		// $json_encode .= json_encode(array('service_req_con_tours'=>$getrequest['service_req_con_tours']));
		$service_arr['service_req_con_tours'] = array(
			'travel_name_address'=>$getrequest['service_req_con_tours']['travel_name_address'],
			'travel_city_name'=>$getrequest['service_req_con_tours']['travel_city_name'],
			'travel_name'=>$getrequest['service_req_con_tours']['travel_name'],
			'travel_address'=>$getrequest['service_req_con_tours']['travel_address'],
			'travel_phone_no'=>$getrequest['service_req_con_tours']['travel_phone_no']
		);
	}
	
	if(isset($getrequest['service_req_recreation'])){
		// $json_encode .= json_encode(array('service_req_recreation'));
		$service_arr['service_req_recreation'] = array(
			'service_req_recreation'=>NULL
		);
	}
	
	if(isset($getrequest['service_req_short_medical']) && !empty($getrequest['service_req_short_medical']['hospital_name'])){
		// $json_encode .= json_encode(array('service_req_short_medical'=>$getrequest['service_req_short_medical']));
		$service_arr['service_req_short_medical'] = array(
			'hospital_name'=>$getrequest['service_req_short_medical']['hospital_name'],
			'hospital_address'=>$getrequest['service_req_short_medical']['hospital_address'],
			'hospital_state'=>$getrequest['service_req_short_medical']['hospital_state'],
			'hospital_district'=>$getrequest['service_req_short_medical']['hospital_district'],
			'hospital_phone_no'=>$getrequest['service_req_short_medical']['hospital_phone_no'],
			'type_of_medical'=>$getrequest['service_req_short_medical']['type_of_medical']
		);
	}
	
	if(isset($getrequest['service_req_business_meeting']) && !empty($getrequest['service_req_business_meeting']['meet_co_name'])){
		// $json_encode .= json_encode(array('service_req_business_meeting'=>$getrequest['service_req_business_meeting']));
		$service_arr['service_req_business_meeting'] = array(
			'meet_co_name'=>$getrequest['service_req_business_meeting']['meet_co_name'],
			'meet_co_address'=>$getrequest['service_req_business_meeting']['meet_co_address'],
			'meet_co_phone_no'=>$getrequest['service_req_business_meeting']['meet_co_phone_no'],
			'meet_co_webiste'=>$getrequest['service_req_business_meeting']['meet_co_webiste'],
			'meet_firm_name'=>$getrequest['service_req_business_meeting']['meet_firm_name'],
			'meet_firm_address'=>$getrequest['service_req_business_meeting']['meet_firm_address'],
			'meet_firm_phone'=>$getrequest['service_req_business_meeting']['meet_firm_phone'],
			'meet_firm_wbsite'=>$getrequest['service_req_business_meeting']['meet_firm_wbsite']

		);
	}

	if(isset($getrequest['service_req_business_venture']) && !empty($getrequest['service_req_business_venture']['venture_name'])){
		// $json_encode .= json_encode(array('service_req_business_venture'=>$getrequest['service_req_business_venture']));
		$service_arr['service_req_business_venture'] = array(
			'venture_name'=>$getrequest['service_req_business_venture']['venture_name'],
			'venture_address'=>$getrequest['service_req_business_venture']['venture_address'],
			'venture_phone_no'=>$getrequest['service_req_business_venture']['venture_phone_no'],
			'venture_website'=>$getrequest['service_req_business_venture']['venture_website'],
			'venture_nature_business'=>$getrequest['service_req_business_venture']['venture_nature_business']

		);
	}

	if(isset($getrequest['service_req_exp_spe']) && !empty($getrequest['service_req_exp_spe']['expart_co_name'])){
		// $json_encode .= json_encode(array('service_req_exp_spe'=>$getrequest['service_req_exp_spe']));
		$service_arr['service_req_exp_spe'] = array(
			'expart_co_name'=>$getrequest['service_req_exp_spe']['expart_co_name'],
			'expert_co_address'=>$getrequest['service_req_exp_spe']['expert_co_address'],
			'expert_co_phone'=>$getrequest['service_req_exp_spe']['expert_co_phone'],
			'expert_co_website'=>$getrequest['service_req_exp_spe']['expert_co_website'],
			'firm_name'=>$getrequest['service_req_exp_spe']['firm_name'],
			'firm_address'=>$getrequest['service_req_exp_spe']['firm_address'],
			'firm_phone'=>$getrequest['service_req_exp_spe']['firm_phone'],
			'firm_website'=>$getrequest['service_req_exp_spe']['firm_website']

		);
	}

	if(isset($getrequest['service_req_part_exhi']) && !empty($getrequest['service_req_part_exhi']['exhi_name'])){
		// $json_encode .= json_encode(array('service_req_part_exhi'=>$getrequest['service_req_part_exhi']));
		$service_arr['service_req_part_exhi'] = array(
			'exhi_name'=>$getrequest['service_req_part_exhi']['exhi_name'],
			'exhi_address'=>$getrequest['service_req_part_exhi']['exhi_address'],
			'exhi_phone_no'=>$getrequest['service_req_part_exhi']['exhi_phone_no'],
			'exhi_website'=>$getrequest['service_req_part_exhi']['exhi_website'],
			'exhi_name_address'=>$getrequest['service_req_part_exhi']['exhi_name_address']

		);
	}

	if(isset($getrequest['service_req_form_purchase']) && !empty($getrequest['service_req_form_purchase']['purchase_name'])){
		// $json_encode .= json_encode(array('service_req_form_purchase'=>$getrequest['service_req_form_purchase']));
		$service_arr['service_req_form_purchase'] = array(
			'purchase_name'=>$getrequest['service_req_form_purchase']['purchase_name'],
			'purchase_address'=>$getrequest['service_req_form_purchase']['purchase_address'],
			'purchase_phone_no'=>$getrequest['service_req_form_purchase']['purchase_phone_no'],
			'purchase_website'=>$getrequest['service_req_form_purchase']['purchase_website'],
			'purchase_nature_business'=>$getrequest['service_req_form_purchase']['purchase_nature_business']

		);
	}

	if(isset($getrequest['service_req_recruit_manpower']) && !empty($getrequest['service_req_recruit_manpower']['recruit_name'])){
		// $json_encode .= json_encode(array('service_req_recruit_manpower'=>$getrequest['service_req_recruit_manpower']));
		$service_arr['service_req_recruit_manpower'] = array(
			'recruit_name'=>$getrequest['service_req_recruit_manpower']['recruit_name'],
			'recruit_address'=>$getrequest['service_req_recruit_manpower']['recruit_address'],
			'recruit_website'=>$getrequest['service_req_recruit_manpower']['recruit_website'],
			'recruit_name_contact'=>$getrequest['service_req_recruit_manpower']['recruit_name_contact'],
			'recruit_nature_job'=>$getrequest['service_req_recruit_manpower']['recruit_nature_job'],
			'recruit_place'=>$getrequest['service_req_recruit_manpower']['recruit_place']

		);
	}

	if(isset($getrequest['service_req_short_yoga']) && !empty($getrequest['service_req_short_yoga']['yoga_institute_name'])){
		// $json_encode .= json_encode(array('service_req_short_yoga'=>$getrequest['service_req_short_yoga']));
		$service_arr['service_req_short_yoga'] = array(
			'yoga_institute_name'=>$getrequest['service_req_short_yoga']['yoga_institute_name'],
			'yoga_institute_address'=>$getrequest['service_req_short_yoga']['yoga_institute_address'],
			'yoga_institute_state'=>$getrequest['service_req_short_yoga']['yoga_institute_state'],
			'yoga_institute_district'=>$getrequest['service_req_short_yoga']['yoga_institute_district'],
			'yoga_institute_phone_no'=>$getrequest['service_req_short_yoga']['yoga_institute_phone_no']

		);
	}

	// if(isset($getrequest['service_req_academic_network'])){
	// 	$json_encode .= json_encode(array('service_req_academic_network'));
	// }

	// echo $json_encode;exit;
	if(isset($getrequest['saarc_flag']) && $getrequest['saarc_flag']=="Y"){
		// $saarc_json .= json_encode(array('saarcCountry'=>$getrequest['saarcCountry'],'saarcYear'=>$getrequest['saarcYear'],'saarcVisitNo'=>$getrequest['saarcVisitNo']));
		$sarrc_arr = array(
			'saarcCountry'=>!empty($getrequest['saarcCountry'])?$getrequest['saarcCountry']:NULL,
			'saarcYear'=>!empty($getrequest['saarcYear'])?$getrequest['saarcYear']:NULL,
			'saarcVisitNo'=>!empty($getrequest['saarcVisitNo'])?$getrequest['saarcVisitNo']:NULL
		);
	}
	// echo $saarc_json;exit;
	$saveFinalData = [
		// 'residing_in'=>!empty($getrequest['residing_in'])?$getrequest['residing_in']:NULL,
		// 'residing_code'=>!empty($getrequest['residing_code'])?$getrequest['residing_code']:NULL,
		'nationality'=>!empty($getrequest['nationality'])?$getrequest['nationality']:NULL,
		'order_id'=>!empty($getrequest['order_id'])?$getrequest['order_id']:NULL,
		'applicant_id'=>!empty($getrequest['applicant_id'])?$getrequest['applicant_id']:NULL,
		'uid'=>!empty($getrequest)?$getrequest['uid']:NULL,
		'passport_type'=>!empty($getrequest['passport_type'])?$getrequest['passport_type']:NULL,
		'type_of_visa'=>!empty($getrequest['type_of_visa'])?$getrequest['type_of_visa']:NULL,
		'visa_service'=>!empty($getrequest['visa_service'])?$getrequest['visa_service']:NULL,
		'service_req_form_values'=>!empty($getrequest['service_req_form_values'])?$getrequest['service_req_form_values']:NULL,
		'visa_duration'=>!empty($getrequest['visa_duration'])?$getrequest['visa_duration']:NULL,
		'no_entries'=>!empty($getrequest['no_entries'])?$getrequest['no_entries']:NULL,
		'airport_name'=>!empty($getrequest['airport_name'])?$getrequest['airport_name']:NULL,
		'pres_country'=>!empty($getrequest['pres_country'])?$getrequest['pres_country']:NULL,
		'service_purpose_json'=>json_encode($service_arr),
		'airport_id'=> !empty($getrequest['airport_id'])?$getrequest['airport_id']:NULL,
		'old_visa_flag'=> !empty($getrequest['old_visa_flag'])?$getrequest['old_visa_flag']:NULL,
		'prv_visit_add1'=> !empty($getrequest['prv_visit_add1'])?$getrequest['prv_visit_add1']:NULL,
		'visited_city'=> !empty($getrequest['visited_city'])?$getrequest['visited_city']:NULL,
		'old_visa_no'=> !empty($getrequest['old_visa_no'])?$getrequest['old_visa_no']:NULL,
		'old_visa_type_id'=> !empty($getrequest['old_visa_type_id'])?$getrequest['old_visa_type_id']:NULL,
		'oldvisaissueplace'=> !empty($getrequest['oldvisaissueplace'])?$getrequest['oldvisaissueplace']:NULL,
		'oldvisaissuedate'=> !empty($getrequest['oldvisaissuedate'])?$getrequest['oldvisaissuedate']:NULL,
		'refuse_flag'=> !empty($getrequest['refuse_flag'])?$getrequest['refuse_flag']:NULL,
		'refuse_details'=> !empty($getrequest['refuse_details'])?$getrequest['refuse_details']:NULL,
		'country_visited'=> !empty($getrequest['country_visited'])?$getrequest['country_visited']:NULL,
		'saarc_flag'=> !empty($getrequest['saarc_flag'])?$getrequest['saarc_flag']:NULL,
		'saarc_details'=> !empty($sarrc_arr)?json_encode($sarrc_arr):NULL,
		'nameofsponsor_ind'=> !empty($getrequest['nameofsponsor_ind'])?$getrequest['nameofsponsor_ind']:NULL,
		'add1ofsponsor_ind'=> !empty($getrequest['add1ofsponsor_ind'])?$getrequest['add1ofsponsor_ind']:NULL,
		'phoneofsponsor_ind'=> !empty($getrequest['phoneofsponsor_ind'])?$getrequest['phoneofsponsor_ind']:NULL,
		'nameofsponsor_msn'=> !empty($getrequest['nameofsponsor_msn'])?$getrequest['nameofsponsor_msn']:NULL,
		'add1ofsponsor_msn'=> !empty($getrequest['add1ofsponsor_msn'])?$getrequest['add1ofsponsor_msn']:NULL,
		'phoneofsponsor_msn'=> !empty($getrequest['phoneofsponsor_msn'])?$getrequest['phoneofsponsor_msn']:NULL,
		'status'=>"Completed Form",
	];

	// echo "<pre>";print_r($saveFinalData);exit;

	// $checkvisadetails = EvisaAppDetails::Where('order_id',$saveFinalData['order_id'])->first();

	$checkvisadetails = EvisaAppDetails::firstOrCreate(['order_id' => $saveFinalData['order_id']]);
	$checkvisadetails->order_id = $saveFinalData['order_id'];
	$checkvisadetails->applicant_id = $saveFinalData['applicant_id'];
	$checkvisadetails->uid = $saveFinalData['uid'];
	$checkvisadetails->nationality = $saveFinalData['nationality'];
	$checkvisadetails->passport_type = $saveFinalData['passport_type'];
	$checkvisadetails->type_of_visa = $saveFinalData['type_of_visa'];
	$checkvisadetails->visa_service = $saveFinalData['visa_service'];
	$checkvisadetails->service_req_form_values = $saveFinalData['service_req_form_values'];
	$checkvisadetails->visa_duration = $saveFinalData['visa_duration'];
	$checkvisadetails->no_entries = $saveFinalData['no_entries'];
	$checkvisadetails->airport_name = $saveFinalData['airport_name'];
	$checkvisadetails->pres_country = $saveFinalData['pres_country'];
	$checkvisadetails->service_purpose_json = $saveFinalData['service_purpose_json'];
	$checkvisadetails->airport_id = $saveFinalData['airport_id'];
	$checkvisadetails->old_visa_flag = $saveFinalData['old_visa_flag'];
	$checkvisadetails->prv_visit_add1 = $saveFinalData['prv_visit_add1'];
	$checkvisadetails->visited_city = !empty($getrequest['visited_city'])?$getrequest['visited_city']:NULL;
	$checkvisadetails->old_visa_no = $getrequest['old_visa_no'];
	$checkvisadetails->old_visa_type_id = $getrequest['old_visa_type_id'];
	$checkvisadetails->oldvisaissueplace = $getrequest['oldvisaissueplace'];
	$checkvisadetails->oldvisaissuedate = $getrequest['oldvisaissuedate'];
	$checkvisadetails->refuse_flag = $getrequest['refuse_flag'];
	$checkvisadetails->refuse_details = $getrequest['refuse_details'];
	$checkvisadetails->country_visited = $getrequest['country_visited'];
	$checkvisadetails->saarc_flag = $getrequest['saarc_flag'];
	$checkvisadetails->saarc_details = json_encode($sarrc_arr);
	$checkvisadetails->nameofsponsor_ind = $getrequest['nameofsponsor_ind'];
	$checkvisadetails->add1ofsponsor_ind = $getrequest['add1ofsponsor_ind'];
	$checkvisadetails->phoneofsponsor_ind = $getrequest['phoneofsponsor_ind'];
	$checkvisadetails->nameofsponsor_msn = $getrequest['nameofsponsor_msn'];
	$checkvisadetails->add1ofsponsor_msn = $getrequest['add1ofsponsor_msn'];
	$checkvisadetails->phoneofsponsor_msn = $getrequest['phoneofsponsor_msn'];
	$checkvisadetails->created_at = date('Y-m-d H:i:s');
	$checkvisadetails->status = "Complete Form";

	$checkvisadetails->save();

	$getpostdata = array(
		'residing_in'=> !empty($getrequest['residing_in'])?$getrequest['residing_in']:NULL,
		'residing_code'=> !empty($getrequest['residing_code'])?$getrequest['residing_code']:NULL,
		'nationality'=> !empty($getrequest['nationality'])?$getrequest['nationality']:NULL,
		'order_id'=> !empty($getrequest['order_id'])?$getrequest['order_id']:NULL,
		'applicant_id'=> !empty($getrequest['applicant_id'])?$getrequest['applicant_id']:NULL,
		'uid'=> !empty($getrequest['uid'])?$getrequest['uid']:NULL,
		'passport_type'=> !empty($getrequest['passport_type'])?$getrequest['passport_type']:NULL,
		'visa_service'=>!empty($getrequest['visa_service'])?$getrequest['visa_service']:NULL
	);

	$getapplicatdata = ApplicantProfiles::query()
						->join('users','users.user_id','=','applicant_profiles.user_id')
						->where('applicant_profiles.user_id',$getpostdata['uid'])
						->where('applicant_profiles.profile_id',$getpostdata['applicant_id'])
						->get([
													'applicant_profiles.*',
													'email_id'
												])->first();
	$getorderdetails = OrderDetails::where('order_id', '=', $getrequest['order_id'])
                     ->get()->first();					
	// echo "<pre>";print_r($getorderdetails);exit;					
	return view('evisaapplication/verifyemail',compact('getpostdata', 'getapplicatdata', 'getorderdetails'));
}

public function applicationtrack(Request $request){
	$getrequest = $request->all();
		
	if (isset($getrequest['btn_track_confirm'])){
        $getorderdetails = OrderDetails::join('users','users.user_id','=','order_details.user_id')
							->where('order_code', '=', $getrequest['order_code'])
							->where('email_id', '=', $getrequest['email_id'])
                     		->first();
            $order_data = array(
            		'order_code'=>$getrequest['order_code'],
            		'user_email'=>$getrequest['email_id'],
            	);         		
            Session::put('applicantdetails', $order_data);         		
        // echo "<pre>";print_r($getorderdetails);exit;
        if($getorderdetails['applicant_booking_status']=='Evisa-Services'){
        	// Redirect::route('evisa-type',array('ccode' => $getorderdetails['residing_code']));
        	return Redirect::to('evisa-type/'.$getorderdetails['residing_code']);
        }elseif ($getorderdetails['applicant_booking_status']=='Evisa-ApplicationDetails') {
        	# code...
        	return Redirect::to('evisa-form/basic-details/'.$getorderdetails['residing_code']);
        }elseif ($getorderdetails['applicant_booking_status']=="Evisa-RelationDetails") {
        	# code...
        	return Redirect::to('evisa-form/family-details/'.$getorderdetails['residing_code']);
        }elseif ($getorderdetails['applicant_booking_status']=='Evisa-FinalForm') {
        	# code...
        	return Redirect::to('evisa/visa-details/'.$getorderdetails['residing_code']);
        }             		
    }
	return view('evisaapplication/evisaapplicationtrack');
}

public function ajaxsendotp(Request $request){
	$getpostdata = $request->all();
	// echo "<pre>";print_r($getpostdata);exit;
	$otp = $this->generateOtp();
	$sendmail = new ApplicationController;

	$error = array();
	$subject = 'One Time Password for your transaction for Redcarpet Assist Services';
	if(isset($getpostdata['app_track']) && !empty($getpostdata['email_id'])){
		try{
			$getorderdetails = OrderDetails::join('users','users.user_id','=','order_details.user_id')
							->where('email_id','=',$getpostdata['email_id'])
                     		->first();
            // echo "<pre>";print_r($getorderdetails);exit;         		
            if(!empty($getorderdetails['order_code']) && !empty($getorderdetails['email_id'])){
            	$to = $getorderdetails['email_id'];
			    $content = "Hello ".$getorderdetails['username'].", <br>Your OTP is ".$otp."</br>Thank you.<br>Regards,<br>Team RedCarpet Assist";
            	$sendmail->sendEmail("support@redcarpetassist.com",$to,null,null, $subject, $content);
            	$error['status'] = 'success';
            	$error['msg'] = strtoupper("Check your email for the OTP");
            	$user = Users::firstOrCreate(['email_id'=>$to]);
		        $user->otp_number = $otp;
		        $user->save();
            }else{
            	$error['status'] = 'not_match';
            	$error['msg'] = strtoupper("Your Email Address not match");
            }         		
		} catch(\Illuminate\Database\QueryException $ex){
				dd($ex->getMessage());
		} catch(PDOException $ex){
				dd($ex->getMessage());
		}             	
	}else{
		$to = $getpostdata['email_id'];
        
		$content = "Dear <font color='red'><b>".$getpostdata['username'].", </b></font>, <br>The One Time Password (OTP) for your online transaction is ".$otp."</br></br>Enter the OTP for a secured payment process.</br></br>Your RedCarpet Assist Team.";
		$sendmail->sendEmail("support@redcarpetassist.com",$to,null,null, $subject, $content);
		$error['status'] = 'success';
        $error['msg'] = strtoupper("Check your email for the OTP");
        $user = Users::firstOrCreate(['email_id'=>$to]);
        $user->otp_number = $otp;
        $user->save();
	}
	return json_encode($error);
}

public function evisabookingpage(Request $request){
	$getrequest = $request->all();
	// echo "<pre>";print_r($getrequest);exit;
	$getpostdata = array(
		'residing_code'=> !empty($getrequest['residing_code'])?$getrequest['residing_code']:NULL,
		'nationality'=> !empty($getrequest['from_country'])?$getrequest['from_country']:NULL,
		'order_id'=> !empty($getrequest['order_id'])?$getrequest['order_id']:NULL,
		'applicant_id'=> !empty($getrequest['applicant_id'])?$getrequest['applicant_id']:NULL,
		'uid'=> !empty($getrequest['uid'])?$getrequest['uid']:NULL,
		'applicant_number'=> !empty($getrequest['applicant_number'])?$getrequest['applicant_number']:NULL,
		'visa_service'=>!empty($getrequest['visa_service'])?$getrequest['visa_service']:NULL,
		'user_name'=>!empty($getrequest['user_name'])?$getrequest['user_name']:NULL,
		'email_id'=>!empty($getrequest['email_id'])?$getrequest['email_id']:NULL,
		'phone_number'=>!empty($getrequest['phone_number'])?$getrequest['phone_number']:NULL,
		'terms'=>!empty($getrequest['terms'])?$getrequest['terms']:NULL
	);


	OrderDetails::where('order_id', $getpostdata['order_id'])
            ->update(['terms_policy'=>$getpostdata['terms']]);

	$getserviceprice = array();
	$amt_arr = array();
	$total = 0;
	$calprice = 0;
	$getservicesprice = ApplicationserviceDetails::join('applicant_profiles','applicant_profiles.profile_id','=','tbl_user_service_details.applicant_id')
    ->join('order_details','order_details.order_id','=','applicant_profiles.order_id')
    ->join('pricing_master',function($join){
    	$join->on('pricing_master.service_id','=','tbl_user_service_details.service_id')
    		->on('pricing_master.nationality','=','order_details.nationality');	
    })
    ->where('tbl_user_service_details.applicant_id', $getrequest['applicant_id'])->where('tbl_user_service_details.user_id',$getrequest['uid'])
         ->get();

    foreach($getservicesprice as $row){
    	$amt_arr = array('amount'=>$row->total_sp_inr_with_gst,'currency'=>$row->currency);
    } 
        
	return view('evisaapplication/evisa-payment',compact('getpostdata','amt_arr'));
}

public function evisapayU(Request $request)
	{
        $getrequest = $request->all();
        // echo "<pre>";print_r($getrequest);exit;
		$hash = "";
		$posted['key'] = "WnvQF6Tj";
		$SALT = "CQwuLpS6QW";
		$phone = $posted['phone'] = $getrequest['phone_number'];
		$txnid = $posted['txnid'] = $getrequest['order_id'];
        $amt = $posted['amount'] = $getrequest['amount'];
        $firstname = $posted['firstname'] = $getrequest['username'];
        $email = $posted['email'] = $getrequest['email_id'];
        $productinfo = $posted['productinfo'] = $getrequest['productinfo'];

		$hashSequence = "key|txnid|amount|productinfo|firstname|email|udf1|udf2|udf3|udf4|udf5|udf6|udf7|udf8|udf9|udf10";
        if(
          empty($posted['key'])
          || empty($posted['txnid'])
          || empty($posted['amount'])
          || empty($posted['firstname'])
          || empty($posted['email'])
          || empty($posted['phone'])
          || empty($posted['productinfo'])

        ) {
            echo $formError = 1;
          } else { 
		    //$posted['productinfo'] = json_encode(json_decode('[{"name":"tutionfee","description":"","value":"500","isRequired":"false"},{"name":"developmentfee","description":"monthly tution fee","value":"1500","isRequired":"false"}]'));
		    $hashVarsSeq = explode('|', $hashSequence); //print_r($hashVarsSeq);exit;
		    $hash_string = '';  
		    foreach($hashVarsSeq as $hash_var) {
		      $hash_string .= isset($posted[$hash_var]) ? $posted[$hash_var] : '';
		      $hash_string .= '|';
		    }

            $hash_string .= $SALT;
            //print_r($hash_string);

            $hash = strtolower(hash('sha512', $hash_string));
            //print_r($hash);
           
          }
//exit;

		return view('evisaapplication/payment_pu',compact('hash','txnid','amt','phone','firstname','email','productinfo'));
}

public function paymentcancel(Request $request){
	return view('evisaapplication/payment_cancel');
}

public function paymentfail(Request $request){
	$getrequest = $request->all();
	// echo "<pre>";print_r($getrequest);exit;
	$response = array(
		'status'=> !empty($getrequest['status'])?$getrequest['status']:NULL,
		'txnid'=> !empty($getrequest['txnid'])?$getrequest['txnid']:NULL,
		'amount'=>!empty($getrequest['amount'])?round($getrequest['amount']):NULL
	);

	$orderupdate = OrderDetails::firstOrCreate(['order_id'=>$response['txnid']]);
	$orderupdate->payment_status = $response['status'];
	$orderupdate->total_price = $response['amount'];
	$orderupdate->save();

	return view('evisaapplication/payment_fail');
}

public function paymentsuccess(Request $request){
	Session::flush();
	$getrequest = $request->all();
	echo "<pre>";print_r($getrequest);exit;
	$response = array(
		'order_date'=>!empty($getrequest['addedon'])?date('F j, Y H:i:s', strtotime($getrequest['addedon'])):NULL,
		'firstname'=> !empty($getrequest['firstname'])?preg_replace("~[^a-z0-9:]~i", " ", $getrequest['firstname']):NULL,
		'productinfo'=> !empty($getrequest['productinfo'])?$getrequest['productinfo']:NULL,
		'status'=> !empty($getrequest['status'])?$getrequest['status']:NULL,
		'txnid'=> !empty($getrequest['txnid'])?$getrequest['txnid']:NULL,
		'amount'=>!empty($getrequest['amount'])?round($getrequest['amount']):NULL
	);

	$orderupdate = OrderDetails::firstOrCreate(['order_id'=>$response['txnid']]);
	$orderupdate->payment_status = $response['status'];
	$orderupdate->total_price = $response['amount'];
	$orderupdate->save();

	$to = $getorderdetails['email_id'];
    // $content = "Dear $response['firstname'], <br>Welcome to the RedCarpet Assist family. We would like to thank you for your order. Our team is already processing your details and will be in touch for any additional information required to complete the order.</br>Please find your payment receipt.<br><table><tr><th>Transaction Date</th><td>$response['order_date']</td></tr><tr><th>Ref. ID</th><td>$response['txnid']</td></tr><tr><th>Payment Status</th><td>$response['status']</td></tr><tr><th>Amount</th><td>$response['amount']</td></tr></table><br>In case you do need to get in touch with us urgently, please do call us at +91 22 6253 8600 or email us at customercare@redcarpetassist.com. We work Monday to Saturday, 10 am to 8pm Indian Standard Time (GMT +5.30)<br>Your RedCarpet Assist Team.<br><i>Add support@redcarpetassist.com to your address book to ensure that our mails reach your Inbox.</i>";
    $content = "";
    $subject ="We are rolling out the RedCarpet for you";
	$sendmail->sendEmail("support@redcarpetassist.com",$to,null,null, $subject, $content);

	return view('evisaapplication/payment_success', compact('response'));
}

public function ajaxgetcity(Request $request){
	$getrequest = $request->all();
	// echo "<pre>";print_r($getrequest);exit;
	$data = array();
	$result = array();
	if(!empty($getrequest['state_id'])){
		$getcity = DB::table('cities')
					->join('states','states.state_code', '=', 'cities.state_code')
					->where('states.state_id',$getrequest['state_id'])
					->orderby('city_name','ASC')
					->get();
		// echo "<pre>";print_r($getcity);
		if(count($getcity)>0){
			$data['status'] = "found";
			$data['result'] = $getcity;
		}else{
			$data['status'] = "not-found";
			$data['result'] = "Cities Not Found";
		}		
	}else{
		$data['status'] = "fail";
		$data['result'] = "Select First State";
	}

	echo json_encode($data);exit;
}

public function generateOtp()
{
		return $rndno=rand(1000, 9999);
}

public function uploadToApi($target_file, $filetype){
	 $urlArr     = explode("/", $target_file);
	 $r = array();
	 // echo "<pre>";print_r($urlArr);exit;
		$target_dir = "/ocr-upload/";
	 if($filetype != 'png'){
        $pngurl = public_path().$target_dir.$this->generateRandomString().'.png';
         $imageJpg   = imagecreatefromjpeg($target_file);
        imagepng($imageJpg, $pngurl);
    }else{
        $pngurl = $target_file;
    }
    
    $im     = imagecreatefrompng($pngurl);    
    $height = imagesy($im);
    $width  = imagesx($im);
    $im2    = imagecrop($im, ['x' => 0, 'y' => (($height*80)/100) , 'width' => $width, 'height' => $height]); // Take 80% of height for MRZ Code.
    
    if ($im2 !== FALSE) {

        imagefilter($im2, IMG_FILTER_CONTRAST,-100);
        //imagefilter($im2, IMG_FILTER_NEGATE);
        imagepng($im2,$pngurl);
        $a                      = new TesseractOCR($pngurl);
        $data                   = $a->run(); // Use htmlspecialchars function in case process further.
        
        	$is_processed_deleted   = unlink($pngurl);
	        $MRZ                    = new SolidusMRZ();
	        $data                   = $MRZ->parseMRZ($data);
	        // Parse string
	        // $parser = new MrzPardataser();
	        // $travelDocument = $parser->parseString($data);
	        // echo "<pre>";print_r($data);exit;
	        // echo json_encode($data, true);exit;
	        if(isset($data['mrzisvalid']) && $data['mrzisvalid']==1){
	        	if(array_key_exists('error',$data)) {
	            e($r, $data['error']);
		        }else{
		            $country_code = "";
		            $country_id = "";
		            if(!empty($data['nationality']['abbr'])){
		               $country_res = DB::table('countries')
								->where('country_code',$data['nationality']['abbr'])
								->first();		
		               if($country_res != false){
		                 $country_id = $country_res->country_id;
		               }
		            }

		            $data['nationality']['country_id']    = $country_id;
		            $r["message"] = $data;
		            
		        }	
	        }

        return $data;

    }
}

public function generateRandomString($length = 10) {
    $characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
    $charactersLength = strlen($characters);
    $randomString = '';
    for ($i = 0; $i < $length; $i++) {
        $randomString .= $characters[rand(0, $charactersLength - 1)];
    }
    return $randomString;
}

/**
 * function to generate random strings
 * @param 		int 	$length 	number of characters in the generated string
 * @return 		string	a new string is created with random characters of the desired length
 */
public function RandomString($size = 32) {
	$alpha_key = '';
	$keys = range('A', 'Z');

	for ($i = 0; $i < 2; $i++) {
		$alpha_key .= $keys[array_rand($keys)];
	}

	$length = $size - 2;

	$key = '';
	$keys = range(0, 9);

	for ($i = 0; $i < $length; $i++) {
		$key .= $keys[array_rand($keys)];
	}

	return $alpha_key . $key;
}

public function e(&$r,$m) {
	$r["error"]=$r["error"]||true;
	$r["message"].=$m;
}
public function ex($r) {
	echo json_encode($r);
	exit();
}	
}
